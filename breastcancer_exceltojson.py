# -*- coding: utf-8 -*-
"""BreastCancer_ExcelToJSON.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oAwmEKnJo9V945ZHxKVRTbHvlU7dSIjc
"""

import io
import xlrd
from google.colab import files
uploaded = files.upload()

import io
import pandas

df =pandas.read_excel('BreatCancerDataExcel-2.xlsx')
df.loc[1,:]

final_json_array = []
for i in range(0, 48):
  evidence_array = []
  disease_array = []
  drug_array = []
  molecular_entity_array = []
  #has_evidence segment begins
  clinical_stage_array = str(df.iloc[i, 12]).split(",")
  evidence_segment =  {
      "biolink:id": df.iloc[i, 14],
      "biolink:EvidenceType": "biolink:ClinicalTrial",
      "biolink:phase": df.iloc[i, 11],
      "primary end point": df.iloc[i, 13],
      "clinical stage": clinical_stage_array[0], 
      "treamtnt setting": clinical_stage_array[1],
      "url": "https://clinicaltrials.gov/ct2/show/"+str(df.iloc[i, 14]),
      "biolink:comment": ""
    }
  evidence_array.append(evidence_segment)
  #print(evidence_array)
  #------------------------------------------------------------
  #has_drug segment begins
  drugbank_array = str(df.iloc[i,8]).split(",")
  pubchem_array = str(df.iloc[i,9]).split(",")
  drugname_array = str(df.iloc[i,7]).split(",")
  for j in range(0, len(drugbank_array)):
    drug_segment = {
      "biolink:id": [
        {
          "biolink:source_data_file": "Drugbank",
          "code": drugbank_array[j],
          "biolink:versionOf": ""
        },
        {
          "biolink:source_data_file": "PubChem",
          "code": pubchem_array[j],
          "biolink:versionOf": ""
        }
      ],
      "biolink:name": drugname_array[j],
      "biolink:type": "biolink:drug"
    }
    drug_array.append(drug_segment)
  #print(drug_array)
  #------------------------------------------------------------
  #has_disease segment begins
  disease_segment =  {
      "biolink:id": [
        {
          "biolink:source_data_file": "DOID",
          "code": "DOID_1612",
          "biolink:source_version": "",
          "url": "http://purl.obolibrary.org/obo/DOID_1612"
        },
        {
          "biolink:source_data_file": "SNOMEDCT_US",
          "code": "126926005",
          "biolink:versionOf": "2016_03_01",
          "url": "SNOMEDCT_US_2016_03_01:126926005"
        },
        {
          "biolink:source_data_file": "ICD10CM",
          "code": "C50",
          "biolink:source_version": "10",
          "url": ""
        }
      ],
      "biolink:name": "breast cancer",
      "biolink:type": "biolink:disease",
      "biolink:comment": df.iloc[i,1]
    }
  disease_array.append(disease_segment)
  #print(disease_array)
  #------------------------------------------------------------
  #has_molecular entity segment begins
  ensemble_std_array = str(df.iloc[i, 4]).split(",")
  enrichment_biomarker_array = str(df.iloc[i, 2]).split(",")
  relationship_array = str(df.iloc[i, 3]).split(",")
  marker_array = str(df.iloc[i, 5]).split(",")
  for j in range(0, len(ensemble_std_array)):
    molecular_entity_segment =  {
      "biolink:id": 
      {
         "biolink:source_data_file": "NCBI Entrez",
         "code": ensemble_std_array[j]
       },
      "biolink:name": enrichment_biomarker_array[j],
      "biolink:type": marker_array[j],
      "biolink:relation": relationship_array[j]
    }
    molecular_entity_array.append(molecular_entity_segment)
  #print(molecular_entity_array)
  #------------------------------------------------------------
  #final segment
  final_json = {
      "biolink:id": "000"+str(i+1),
      "biolink:name": "biomarker"+str(i+1),
      "biolink:type": "biomarker",
      "curator": [
        {
          "biolink:name": "Ben Feng",
          "biolink:update_date": "2020-02-19T19:41:44.731Z",
          "biolink:comment": ""
        }
      ],
       "biolink:has_drug": drug_array,
       "has_disease": disease_array,
       "has_molecular_entity": molecular_entity_array,
        "biolink:has_evidence": evidence_array
  }
  final_json_array.append(final_json)
#print(final_json_array)

import json
print(json.dumps(final_json_array, sort_keys=True, indent=4))

store = []
framenames = []

# Store frame names in a list
for i in range(0, 48):
  drugbank_array = []
  pubchem_array = []
  drugbank_array = str(df.iloc[i, 30]).split(", ")
  pubchem_array = str(df.iloc[i, 31]).split(", ")
  treatment = str(df.iloc[i, 26]).split(", ")
  if(len(treatment)==1):
    treatment.append("nan")
  
  drug_names = str(df.iloc[i, 23]).split(", ")
  
  
  for j in range(0, len(drugbank_array)):
    drug_array_segment = []
    segment = {
      "biolink:id": [
        {
          "biolink:source_data_file": "Drugbank",
          "code": drugbank_array[j],
          "biolink:versionOf": ""
        },
        {
          "biolink:source_data_file": "PubChem",
          "code": pubchem_array[j],
          "biolink:versionOf": ""
        }
      ],
      "biolink:name": drug_names[j],
      "biolink:type": "biolink:drug"
    }
    drug_array_segment.append(segment)
    #print(drug_array_segment)
  evidence_array_segment = []
  evidence_segment = {
      "biolink:id": df.iloc[i,28],
      "biolink:EvidenceType": "biolink:ClinicalTrial",
      "biolink:phase": df.iloc[i, 25],
      "primary end point": df.iloc[i, 27],
      "clinical stage": treatment[0], 
      "treatment setting": treatment[1],
      "url": "https://clinicaltrials.gov/ct2/show/NCT03641755",
      "biolink:comment": ""
  }
  evidence_array_segment.append(evidence_segment)

  disease_array_segment = []
  disease_segment =  {
      "biolink:id": [
        {
          "biolink:source_data_file": "DOID",
          "code": "DOID_1612",
          "biolink:source_version": "",
          "url": "http://purl.obolibrary.org/obo/DOID_1612"
        },
        {
          "biolink:source_data_file": "SNOMEDCT_US",
          "code": "126926005",
          "biolink:versionOf": "2016_03_01",
          "url": "SNOMEDCT_US_2016_03_01:126926005"
        },
        {
          "biolink:source_data_file": "ICD10CM",
          "code": "C50",
          "biolink:source_version": "10",
          "url": ""
        }
      ],
      "biolink:name": "breast cancer",
      "biolink:type": "biolink:disease",
      "biolink:comment": df.iloc[i, 1]
    }
  disease_array_segment.append(disease_segment)
  #print(disease_array_segment)

  molecular_entity_array_segment = []
  if(df.iloc[i,2] != "nan" or df.iloc[i,3] != "nan" or df.iloc[i,4] != "nan" or df.iloc[i,5] != "nan"):
    molecular_entity_segment = {
      "biolink:id": 
      {
         "biolink:source_data_file": "NCBI Entrez",
         "code": df.iloc[i,2]
       },
      "biolink:name": df.iloc[i,3],
      "biolink:type": df.iloc[i,5],
      "biolink:relation": df.iloc[i,4]
    }
    molecular_entity_array_segment.append(molecular_entity_segment);
  if(df.iloc[i,6] != "nan" or df.iloc[i,7] != "nan" or df.iloc[i,8] != "nan" or df.iloc[i,9] != "nan"):
    molecular_entity_segment = {
      "biolink:id": 
      {
         "biolink:source_data_file": "NCBI Entrez",
         "code": df.iloc[i,6]
       },
      "biolink:name": df.iloc[i,7],
      "biolink:type": df.iloc[i,9],
      "biolink:relation": df.iloc[i,8]
    }
    molecular_entity_array_segment.append(molecular_entity_segment);

  if(df.iloc[i,10] != "nan" or df.iloc[i,11] != "nan" or df.iloc[i,12] != "nan" or df.iloc[i,13] != "nan"):
    molecular_entity_segment = {
      "biolink:id": 
      {
         "biolink:source_data_file": "NCBI Entrez",
         "code": df.iloc[i,10]
       },
      "biolink:name": df.iloc[i,11],
      "biolink:type": df.iloc[i,13],
      "biolink:relation": df.iloc[i,12]
    }
    molecular_entity_array_segment.append(molecular_entity_segment);
    
  if(df.iloc[i,14] != "nan" or df.iloc[i,15] != "nan" or df.iloc[i,16] != "nan" or df.iloc[i,17] != "nan"):
    molecular_entity_segment = {
      "biolink:id": 
      {
         "biolink:source_data_file": "NCBI Entrez",
         "code": df.iloc[i,14]
       },
      "biolink:name": df.iloc[i,15],
      "biolink:type": df.iloc[i,17],
      "biolink:relation": df.iloc[i,16]
    }
    molecular_entity_array_segment.append(molecular_entity_segment);
  
  if(df.iloc[i,18] != "nan" or df.iloc[i,19] != "nan" or df.iloc[i,20] != "nan" or df.iloc[i,21] != "nan"):
    molecular_entity_segment = {
      "biolink:id": 
      {
         "biolink:source_data_file": "NCBI Entrez",
         "code": df.iloc[i,18]
       },
      "biolink:name": df.iloc[i,19],
      "biolink:type": df.iloc[i,21],
      "biolink:relation": df.iloc[i,20]
    }
    molecular_entity_array_segment.append(molecular_entity_segment);
  #print(molecular_entity_array_segment)
  final_segment = {
      "biolink:id": "000"+str(i+1),
      "biolink:name": "biomarker"+str(i+1),
      "biolink:type": "biomarker",
      "curator": [
      {
        "biolink:name": "Ben Feng",
        "biolink:update_date": "2020-02-22T19:41:44.731Z",
        "biolink:comment": ""
      }
      ],
      "biolink:has_drug": drug_array_segment,
      "has_disease": disease_array_segment,
      "has_molecular_entity": molecular_entity_array_segment,
      "biolink:has_evidence": evidence_array_segment
     }
  framenames.append(final_segment)
print(framenames)

#f = open( 'data.json', 'w')
import json
from google.colab import files
format_uploaded = files.upload()